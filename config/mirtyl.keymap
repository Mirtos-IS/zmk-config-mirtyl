/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <200>;
    retro-tap;
};

&sk {
    quick-release;
    release-after-ms = <300>;
};

&lt {
    quick-tap-ms = <200>;
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    retro-tap;
};

&sl { release-after-ms = <300>; };

/ {
    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <140>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        qlt: qlt {
            compatible = "zmk,behavior-hold-tap";
            label = "QLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            retro-tap;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <7 8>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <28 27>;
        };
    };

    macros {
        ZMK_MACRO(

        Macros_a_acute,

        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp A>,
            <&macro_release>,
            <&kp RALT>;

        )
        ZMK_MACRO(

        Macros_e_acute,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp E>,
            <&macro_release>,
            <&kp RALT>;

        )
        ZMK_MACRO(

        Macros_i_acute,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp I>,
            <&macro_release>,
            <&kp RALT>;

        )
        ZMK_MACRO(

        Macros_o_acute,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp O>,
            <&macro_release>,
            <&kp RALT>;

        )
        ZMK_MACRO(

        Macros_u_acute,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp U>,
            <&macro_release>,
            <&kp RALT>;

        )
        ZMK_MACRO(

        Macros_a_grave,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp GRAVE>,
            <&macro_release>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp A>;

        )
        ZMK_MACRO(

        Macros_a_caret,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp NUMBER_6>,
            <&macro_release>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp A>;

        )
        ZMK_MACRO(

        Macros_e_caret,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp NUMBER_6>,
            <&macro_release>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp E>;

        )
        ZMK_MACRO(

        Macros_o_caret,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp NUMBER_6>,
            <&macro_release>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp O>;

        )
        ZMK_MACRO(

        Macros_a_tilde,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp TILDE>,
            <&macro_release>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp A>;

        )
        ZMK_MACRO(

        Macros_o_tilde,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp TILDE>,
            <&macro_release>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp O>;

        )
        ZMK_MACRO(

        Cedilha,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings =
            <&macro_press>,
            <&kp RALT>,
            <&macro_tap>,
            <&kp COMMA>,
            <&macro_release>,
            <&kp RALT>;

        )
    };

    keymap {
        compatible = "zmk,keymap";

        Alpha {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //       | SHF | GUI | LWR | SPC |   | ENT | RSE  | ALT | ENT |

            bindings = <
&kp Y           &kp C          &kp L         &kp M           &kp K               &kp Z      &kp F             &kp U               &lt 4 COMMA  &kp APOSTROPHE
&kp I           &kp S          &kp R         &kp T           &kp G               &kp P      &kp N             &kp E               &kp A        &kp O
&mt LEFT_ALT Q  &kp V          &kp W         &kp D           &kp J               &kp B      &kp H             &kp SEMICOLON       &kp DOT      &mt LEFT_ALT X
&none           &qlt 2 ESCAPE  &sk LEFT_ALT  &sk LEFT_SHIFT  &sl 1  &lt 3 SPACE  &sk LCTRL  &mt LEFT_ALT TAB  &mt LGUI BACKSPACE
            >;
        };

        Sym {
            bindings = <
&kp DOUBLE_QUOTES  &kp QUESTION   &kp MINUS  &kp GREATER_THAN  &kp TILDE             &kp GRAVE        &kp CARET        &Macros_u_acute  &Macros_a_caret  &Macros_o_caret
&Macros_i_acute    &kp AT         &kp EQUAL  &kp DOLLAR        &kp HASH              &kp AMPS         &kp STAR         &Macros_e_acute  &Macros_a_acute  &Macros_o_acute
&kp PIPE           &kp BACKSLASH  &Cedilha   &kp PERCENT       &kp PLUS              &Macros_a_grave  &kp EXCLAMATION  &Macros_e_caret  &Macros_a_tilde  &Macros_o_tilde
&none              &sk RIGHT_ALT  &none      &sk LEFT_META     &sl 2      &kp SLASH  &kp UNDER        &none            &kp COLON
            >;
        };

        SysNum {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&mo 4         &kp LS(LG(S))   &kp LG(C)         &kp LG(V)             &kp LG(X)                &kp SLASH      &kp PLUS               &kp DOT            &kp MINUS        &kp STAR
&kp NUMBER_6  &kp N3          &kp N1            &kp N2                &kp NUMBER_7             &kp NUMBER_9   &kp N4                 &kp N0             &kp N5           &kp N8
&kp ENTER     &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp DELETE               &kp RA(COLON)  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp TAB
&none         &none           &none             &none                 &none         &kp SPACE  &kp COMMA      &kp DELETE             &kp BACKSPACE
            >;
        };

        SysNav {
            bindings = <
&kp KP_NUM         &kp F1               &kp F2             &kp F3        &kp F10         &kp SCROLLLOCK   &kp PAGE_UP  &kp PAGE_DOWN  &none      &kp C_BRI_UP
&kp LEFT_GUI       &mt LEFT_CONTROL F4  &mt LEFT_SHIFT F5  &kp F6        &kp F11         &kp PRINTSCREEN  &kp LEFT     &kp DOWN       &kp RIGHT  &kp UP
&mt LEFT_ALT CAPS  &kp F7               &kp F8             &kp F9        &kp F12         &kp INS          &kp END      &kp HOME       &kp C_PP   &kp C_BRI_DEC
&none              &kp C_VOL_UP         &none              &kp C_VOL_DN  &sl 4    &none  &none            &none        &none
            >;
        };

        BLE {
            bindings = <
&none       &none         &none         &none         &sys_reset          &sys_reset   &none  &none  &none  &none
&none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &sys_reset          &none        &none  &none  &none  &none
&bt BT_CLR  &none         &none         &none         &bootloader         &bootloader  &none  &none  &none  &bt BT_CLR
&none       &none         &none         &none         &none        &none  &none        &none  &none
            >;
        };
    };
};
